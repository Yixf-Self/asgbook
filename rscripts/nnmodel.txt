
R version 2.14.1 (2011-12-22)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> data <- read.table("../output/gdipattern_files/gdipatterns.txt");
> colnames(data)[1] <- "pop";
> colnames(data)[2] <- "light";
> colnames(data)[3] <- "gdi";
> 
> summary(data)
      pop             light             gdi        
 Min.   : 11.30   Min.   :  0.00   Min.   :-0.300  
 1st Qu.: 25.00   1st Qu.: 32.79   1st Qu.: 0.760  
 Median : 49.08   Median : 57.57   Median : 1.670  
 Mean   : 66.18   Mean   : 58.82   Mean   : 1.633  
 3rd Qu.: 83.54   3rd Qu.: 91.53   3rd Qu.: 2.000  
 Max.   :394.96   Max.   :100.00   Max.   : 4.000  
> 
> library(neuralnet);
> data$rich = round(data$gdi) > 2.5;
> nn1 <- neuralnet(rich ~ pop+light, data=data, hidden=2, threshold=0.1, err.fct="ce", act.fct="logistic", linear.output=FALSE);
> plot(nn1);
> 
> nn2 <- neuralnet(gdi ~ pop+light, data=data, hidden=3, err.fct="sse", threshold=0.5, act.fct="logistic", linear.output=TRUE);
> plot(nn2);
> 
> library(nnet);
> #nn2 <- nnet(gdi ~ pop + light, data=data, size=2, entropy=FALSE, linout=TRUE );
> #summary(nn2)
> data$classes = class.ind( round(data$gdi) );
> nn3 <- nnet(classes ~ pop + light, data=data, size=2, entropy=TRUE );
# weights:  21
initial  value 399.401310 
iter  10 value 249.327119
iter  20 value 246.171173
iter  30 value 244.638001
iter  40 value 244.046097
iter  50 value 244.029765
iter  60 value 243.875836
iter  70 value 236.374583
iter  80 value 219.772359
iter  90 value 215.981407
iter 100 value 214.453962
final  value 214.453962 
stopped after 100 iterations
> summary(nn3)
a 2-2-5 network with 21 weights
options were - entropy fitting 
 b->h1 i1->h1 i2->h1 
 16.62   1.75  -2.37 
 b->h2 i1->h2 i2->h2 
  3.40   0.01  -0.07 
 b->o1 h1->o1 h2->o1 
 -6.21   1.98   5.80 
 b->o2 h1->o2 h2->o2 
 -1.66   0.43   0.95 
 b->o3 h1->o3 h2->o3 
  0.01  -1.17  -1.09 
 b->o4 h1->o4 h2->o4 
 -1.88  -0.79  -2.08 
 b->o5 h1->o5 h2->o5 
  1.10  -0.89 -23.42 
> 
